AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  APIGateway with IAM authentication crossaccount sample.
  This template is lambda side account.

Parameters:
  AnotherAccountID: 
    Description: lambda side account id.
    Type: String
    Default: '999999999999'
  APIString:
    Description: APIGateway random string.
    Type: String
    Default: xxxxxxxxxx
  FunctionName:
    Description: lambda function name.
    Type: String
    Default: apigateway-iam-sample-from
  AnotherAccountRoleName:
    Description: IAM Role name which excute API Gateway.
    Type: String
    Default: APIGatewayIAMRole
  APIPath:
    Description: APIGateway Endpoint path start with stage name.
    Type: String
    Default: dev/apigateway/lambda_attached_apigateway

Resources:
  FromLambdaApp:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Ref FunctionName
      CodeUri: from_app/
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 29
      Environment:
        Variables:
          TZ : Asia/Tokyo
          IAM_ROLE_ARN: !Sub "arn:aws:iam::${AnotherAccountID}:role/${AnotherAccountRoleName}"
          API_STRING: !Ref APIString
          API_PATH: !Ref APIPath 
      Role: !GetAtt FromLambdaRole.Arn

  FromLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: FromLambdaRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: "LambdaCloudWatchBasicAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${FunctionName}:*"
        - PolicyName: "StsAssumeRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - sts:AssumeRole
                Resource: !Sub "arn:aws:iam::${AnotherAccountID}:role/${AnotherAccountRoleName}"